//------------------------------------------------------------------------------
// <auto-generated>
//     This code is auto generated.
//     Runtime Version:3.1.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using www.aade.gr.myDATA.invoice.v1.Item0;
using LinqToXsdTypeManager = Upio.MyData.BlackBox.Core.Schema.LinqToXsdTypeManager;

namespace www.aade.gr.myDATA.invoice.v1.Item0 {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    using https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0;
    using https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0;
    
    
    /// <summary>
    /// <para>
    /// Regular expression: (invoice)+
    /// </para>
    /// </summary>
    public partial class InvoicesDoc : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<AadeBookInvoiceType> invoiceField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
		public static explicit operator InvoicesDoc(XElement xe) { return XTypedServices.ToXTypedElement<InvoicesDoc>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoicesDoc() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (invoice)+
        /// </para>
        /// </summary>
        public InvoicesDoc() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoice)+
        /// </para>
        /// </summary>
        public virtual IList<AadeBookInvoiceType> invoice {
            get {
                if ((this.invoiceField == null)) {
                    this.invoiceField = new XTypedList<AadeBookInvoiceType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.invoiceField;
            }
            set {
                if ((value == null)) {
                    this.invoiceField = null;
                }
                else {
                    if ((this.invoiceField == null)) {
                        this.invoiceField = XTypedList<AadeBookInvoiceType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<AadeBookInvoiceType>(this.invoiceField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static InvoicesDoc Load(string xmlFile) {
            return XTypedServices.Load<InvoicesDoc>(xmlFile);
        }
        
        public static InvoicesDoc Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<InvoicesDoc>(xmlFile);
        }
        
        public static InvoicesDoc Parse(string xml) {
            return XTypedServices.Parse<InvoicesDoc>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoicesDoc>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(AadeBookInvoiceType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
    /// </para>
    /// </summary>
    public partial class RequestedDoc : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator RequestedDoc(XElement xe) { return XTypedServices.ToXTypedElement<RequestedDoc>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static RequestedDoc() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("continuationToken", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("cancelledInvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("incomeClassificationsDoc", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("expensesClassificationDoc", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public RequestedDoc() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public virtual continuationTokenType continuationToken {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("continuationToken", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((continuationTokenType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("continuationToken", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public virtual invoicesDocLocalType invoicesDoc {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((invoicesDocLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public virtual cancelledInvoicesDocLocalType cancelledInvoicesDoc {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("cancelledInvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((cancelledInvoicesDocLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("cancelledInvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public virtual incomeClassificationsDocLocalType incomeClassificationsDoc {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("incomeClassificationsDoc", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((incomeClassificationsDocLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("incomeClassificationsDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (continuationToken?, invoicesDoc?, cancelledInvoicesDoc?, incomeClassificationsDoc?, expensesClassificationDoc?)
        /// </para>
        /// </summary>
        public virtual expensesClassificationDocLocalType expensesClassificationDoc {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("expensesClassificationDoc", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((expensesClassificationDocLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("expensesClassificationDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("RequestedDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static RequestedDoc Load(string xmlFile) {
            return XTypedServices.Load<RequestedDoc>(xmlFile);
        }
        
        public static RequestedDoc Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<RequestedDoc>(xmlFile);
        }
        
        public static RequestedDoc Parse(string xml) {
            return XTypedServices.Parse<RequestedDoc>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<RequestedDoc>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("continuationToken", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(continuationTokenType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(invoicesDocLocalType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("cancelledInvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(cancelledInvoicesDocLocalType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeClassificationsDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(incomeClassificationsDocLocalType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesClassificationDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(expensesClassificationDocLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (invoice)*
        /// </para>
        /// </summary>
        public partial class invoicesDocLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<AadeBookInvoiceType> invoiceField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
		public static explicit operator invoicesDocLocalType(XElement xe) { return XTypedServices.ToXTypedElement<invoicesDocLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static invoicesDocLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (invoice)*
            /// </para>
            /// </summary>
            public invoicesDocLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (invoice)*
            /// </para>
            /// </summary>
            public virtual IList<AadeBookInvoiceType> invoice {
                get {
                    if ((this.invoiceField == null)) {
                        this.invoiceField = new XTypedList<AadeBookInvoiceType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.invoiceField;
                }
                set {
                    if ((value == null)) {
                        this.invoiceField = null;
                    }
                    else {
                        if ((this.invoiceField == null)) {
                            this.invoiceField = XTypedList<AadeBookInvoiceType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<AadeBookInvoiceType>(this.invoiceField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("invoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<invoicesDocLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("invoice", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(AadeBookInvoiceType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (cancelledinvoice)*
        /// </para>
        /// </summary>
        public partial class cancelledInvoicesDocLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<CancelledInvoiceType> cancelledinvoiceField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
		public static explicit operator cancelledInvoicesDocLocalType(XElement xe) { return XTypedServices.ToXTypedElement<cancelledInvoicesDocLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static cancelledInvoicesDocLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (cancelledinvoice)*
            /// </para>
            /// </summary>
            public cancelledInvoicesDocLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (cancelledinvoice)*
            /// </para>
            /// </summary>
            public virtual IList<CancelledInvoiceType> cancelledinvoice {
                get {
                    if ((this.cancelledinvoiceField == null)) {
                        this.cancelledinvoiceField = new XTypedList<CancelledInvoiceType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("cancelledinvoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.cancelledinvoiceField;
                }
                set {
                    if ((value == null)) {
                        this.cancelledinvoiceField = null;
                    }
                    else {
                        if ((this.cancelledinvoiceField == null)) {
                            this.cancelledinvoiceField = XTypedList<CancelledInvoiceType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("cancelledinvoice", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<CancelledInvoiceType>(this.cancelledinvoiceField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("cancelledInvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<cancelledInvoicesDocLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("cancelledinvoice", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(CancelledInvoiceType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (incomeInvoiceClassification)*
        /// </para>
        /// </summary>
        public partial class incomeClassificationsDocLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType> incomeInvoiceClassificationField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
		public static explicit operator incomeClassificationsDocLocalType(XElement xe) { return XTypedServices.ToXTypedElement<incomeClassificationsDocLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static incomeClassificationsDocLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (incomeInvoiceClassification)*
            /// </para>
            /// </summary>
            public incomeClassificationsDocLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (incomeInvoiceClassification)*
            /// </para>
            /// </summary>
            public virtual IList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType> incomeInvoiceClassification {
                get {
                    if ((this.incomeInvoiceClassificationField == null)) {
                        this.incomeInvoiceClassificationField = new XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("incomeInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.incomeInvoiceClassificationField;
                }
                set {
                    if ((value == null)) {
                        this.incomeInvoiceClassificationField = null;
                    }
                    else {
                        if ((this.incomeInvoiceClassificationField == null)) {
                            this.incomeInvoiceClassificationField = XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("incomeInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType>(this.incomeInvoiceClassificationField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("incomeClassificationsDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<incomeClassificationsDocLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (expensesInvoiceClassification)*
        /// </para>
        /// </summary>
        public partial class expensesClassificationDocLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType> expensesInvoiceClassificationField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
		public static explicit operator expensesClassificationDocLocalType(XElement xe) { return XTypedServices.ToXTypedElement<expensesClassificationDocLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static expensesClassificationDocLocalType() {
                BuildElementDictionary();
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (expensesInvoiceClassification)*
            /// </para>
            /// </summary>
            public expensesClassificationDocLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (expensesInvoiceClassification)*
            /// </para>
            /// </summary>
            public virtual IList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType> expensesInvoiceClassification {
                get {
                    if ((this.expensesInvoiceClassificationField == null)) {
                        this.expensesInvoiceClassificationField = new XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("expensesInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.expensesInvoiceClassificationField;
                }
                set {
                    if ((value == null)) {
                        this.expensesInvoiceClassificationField = null;
                    }
                    else {
                        if ((this.expensesInvoiceClassificationField == null)) {
                            this.expensesInvoiceClassificationField = XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("expensesInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType>(this.expensesInvoiceClassificationField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("expensesClassificationDoc", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<expensesClassificationDocLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesInvoiceClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
    /// </para>
    /// </summary>
    public partial class AadeBookInvoiceType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<InvoiceRowType> invoiceDetailsField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator AadeBookInvoiceType(XElement xe) { return XTypedServices.ToXTypedElement<AadeBookInvoiceType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static AadeBookInvoiceType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("uid", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("mark", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("cancelledByMark", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("authenticationCode", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("issuer", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("counterpart", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceHeader", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("paymentMethods", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceDetails", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("taxesTotals", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceSummary", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public AadeBookInvoiceType() {
        }
        
        /// <summary>
        /// <para>
        /// Αναγνωριστικό Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual string uid {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("uid", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("uid", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual System.Nullable<long> mark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("mark", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("mark", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης Ακυρωτικού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual System.Nullable<long> cancelledByMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("cancelledByMark", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("cancelledByMark", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Συμβολοσειρά Αυθεντικοποίησης Παρόχου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual string authenticationCode {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("authenticationCode", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("authenticationCode", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Στοιχεία Εκδότη
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual PartyType issuer {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("issuer", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((PartyType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("issuer", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Στοιχεία Λήπτη
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual PartyType counterpart {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("counterpart", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((PartyType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("counterpart", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Γενικά Στοιχεία
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual InvoiceHeaderType invoiceHeader {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceHeader", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((InvoiceHeaderType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoiceHeader", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Πληρωμές
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual paymentMethodsLocalType paymentMethods {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("paymentMethods", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((paymentMethodsLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("paymentMethods", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λεπτομέρειες Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual IList<InvoiceRowType> invoiceDetails {
            get {
                if ((this.invoiceDetailsField == null)) {
                    this.invoiceDetailsField = new XTypedList<InvoiceRowType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("invoiceDetails", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.invoiceDetailsField;
            }
            set {
                if ((value == null)) {
                    this.invoiceDetailsField = null;
                }
                else {
                    if ((this.invoiceDetailsField == null)) {
                        this.invoiceDetailsField = XTypedList<InvoiceRowType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("invoiceDetails", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<InvoiceRowType>(this.invoiceDetailsField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολα Φόρων
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual taxesTotalsLocalType taxesTotals {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("taxesTotals", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((taxesTotalsLocalType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("taxesTotals", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Συγκεντρωτικά Στοιχεία
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (uid?, mark?, cancelledByMark?, authenticationCode?, issuer?, counterpart?, invoiceHeader, paymentMethods?, invoiceDetails+, taxesTotals?, invoiceSummary)
        /// </para>
        /// </summary>
        public virtual InvoiceSummaryType invoiceSummary {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceSummary", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((InvoiceSummaryType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoiceSummary", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("AadeBookInvoiceType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<AadeBookInvoiceType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("uid", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("mark", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("cancelledByMark", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("authenticationCode", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("issuer", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(PartyType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("counterpart", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(PartyType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceHeader", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(InvoiceHeaderType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("paymentMethods", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(paymentMethodsLocalType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceDetails", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(InvoiceRowType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("taxesTotals", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(taxesTotalsLocalType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceSummary", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(InvoiceSummaryType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (paymentMethodDetails+)
        /// </para>
        /// </summary>
        public partial class paymentMethodsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<PaymentMethodDetailType> paymentMethodDetailsField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
		public static explicit operator paymentMethodsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<paymentMethodsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static paymentMethodsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("paymentMethodDetails", "http://www.aade.gr/myDATA/invoice/v1.0")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (paymentMethodDetails+)
            /// </para>
            /// </summary>
            public paymentMethodsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Στοιχεία Πληρωμών
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (paymentMethodDetails+)
            /// </para>
            /// </summary>
            public virtual IList<PaymentMethodDetailType> paymentMethodDetails {
                get {
                    if ((this.paymentMethodDetailsField == null)) {
                        this.paymentMethodDetailsField = new XTypedList<PaymentMethodDetailType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("paymentMethodDetails", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.paymentMethodDetailsField;
                }
                set {
                    if ((value == null)) {
                        this.paymentMethodDetailsField = null;
                    }
                    else {
                        if ((this.paymentMethodDetailsField == null)) {
                            this.paymentMethodDetailsField = XTypedList<PaymentMethodDetailType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("paymentMethodDetails", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<PaymentMethodDetailType>(this.paymentMethodDetailsField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("paymentMethods", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<paymentMethodsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("paymentMethodDetails", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(PaymentMethodDetailType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (taxes+)
        /// </para>
        /// </summary>
        public partial class taxesTotalsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<TaxTotalsType> taxesField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
		public static explicit operator taxesTotalsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<taxesTotalsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static taxesTotalsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("taxes", "http://www.aade.gr/myDATA/invoice/v1.0")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (taxes+)
            /// </para>
            /// </summary>
            public taxesTotalsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (taxes+)
            /// </para>
            /// </summary>
            public virtual IList<TaxTotalsType> taxes {
                get {
                    if ((this.taxesField == null)) {
                        this.taxesField = new XTypedList<TaxTotalsType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("taxes", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    return this.taxesField;
                }
                set {
                    if ((value == null)) {
                        this.taxesField = null;
                    }
                    else {
                        if ((this.taxesField == null)) {
                            this.taxesField = XTypedList<TaxTotalsType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("taxes", "http://www.aade.gr/myDATA/invoice/v1.0"));
                        }
                        else {
                            XTypedServices.SetList<TaxTotalsType>(this.taxesField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            System.Xml.Linq.XName IXMetaData.SchemaName {
                get {
                    return System.Xml.Linq.XName.Get("taxesTotals", "http://www.aade.gr/myDATA/invoice/v1.0");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<taxesTotalsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(System.Xml.Linq.XName.Get("taxes", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(TaxTotalsType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
    /// </para>
    /// </summary>
    public partial class InvoiceHeaderType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XSimpleList<long> correlatedInvoicesField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator InvoiceHeaderType(XElement xe) { return XTypedServices.ToXTypedElement<InvoiceHeaderType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoiceHeaderType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("series", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("aa", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("issueDate", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceType", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("vatPaymentSuspension", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("currency", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("exchangeRate", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("correlatedInvoices", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("selfPricing", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("dispatchDate", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("dispatchTime", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("vehicleNumber", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("movePurpose", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public InvoiceHeaderType() {
        }
        
        /// <summary>
        /// <para>
        /// Σειρά Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual string series {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("series", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("series", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// ΑΑ Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual string aa {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("aa", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("aa", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ημερομηνία Έκδοσης
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.DateTime issueDate {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("issueDate", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("issueDate", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Είδος Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual string invoiceType {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceType", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("invoiceType", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "invoiceType", global::www.aade.gr.myDATA.invoice.v1.Item0.InvoiceType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αναστολή Καταβολής ΦΠΑ
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<bool> vatPaymentSuspension {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vatPaymentSuspension", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("vatPaymentSuspension", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Νόμισμα
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual CurrencyType currency {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("currency", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((CurrencyType)(Enum.Parse(typeof(CurrencyType), XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype))));
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("currency", "http://www.aade.gr/myDATA/invoice/v1.0"), value.ToString(), "currency", global::www.aade.gr.myDATA.invoice.v1.Item0.CurrencyTypeValidator.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ισοτιμία
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> exchangeRate {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("exchangeRate", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("exchangeRate", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "exchangeRate", global::www.aade.gr.myDATA.invoice.v1.Item0.ExchangeRateType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Συσχετιζόμενα Παραστατικά
        /// </para>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual IList<long> correlatedInvoices {
            get {
                if ((this.correlatedInvoicesField == null)) {
                    this.correlatedInvoicesField = new XSimpleList<long>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, System.Xml.Linq.XName.Get("correlatedInvoices", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.correlatedInvoicesField;
            }
            set {
                if ((value == null)) {
                    this.correlatedInvoicesField = null;
                }
                else {
                    if ((this.correlatedInvoicesField == null)) {
                        this.correlatedInvoicesField = XSimpleList<long>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype, value, System.Xml.Linq.XName.Get("correlatedInvoices", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<System.Int64>(this.correlatedInvoicesField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Ένδειξη Αυτοτιμολόγησης
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<bool> selfPricing {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("selfPricing", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("selfPricing", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ημερομηνία  Έναρξης Αποστολής
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<System.DateTime> dispatchDate {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("dispatchDate", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("dispatchDate", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ώρα Έναρξης Αποστολής
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<System.DateTime> dispatchTime {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("dispatchTime", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("dispatchTime", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αριθμός Οχήματος
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual string vehicleNumber {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vehicleNumber", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("vehicleNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "vehicleNumber", vehicleNumberLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σκοπός Διακίνησης
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (series, aa, issueDate, invoiceType, vatPaymentSuspension?, currency?, exchangeRate?, correlatedInvoices*, selfPricing?, dispatchDate?, dispatchTime?, vehicleNumber?, movePurpose?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> movePurpose {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("movePurpose", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("movePurpose", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "movePurpose", movePurposeLocalType.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoiceHeaderType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoiceHeaderType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("series", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("aa", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("issueDate", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(System.DateTime));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vatPaymentSuspension", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(bool));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("currency", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("exchangeRate", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("correlatedInvoices", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("selfPricing", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(bool));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("dispatchDate", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(System.DateTime));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("dispatchTime", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(System.DateTime));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vehicleNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("movePurpose", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Αριθμός Μεταφορικού Μέσου
        /// </para>
        /// </summary>
        private class vehicleNumberLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private vehicleNumberLocalType() {
            }
        }
        
        private class movePurposeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 8, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private movePurposeLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
    /// </para>
    /// </summary>
    public partial class InvoiceRowType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType> incomeClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType> expensesClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator InvoiceRowType(XElement xe) { return XTypedServices.ToXTypedElement<InvoiceRowType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoiceRowType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("lineNumber", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("quantity", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("measurementUnit", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceDetailType", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("netValue", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("vatCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("vatAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("vatExemptionCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("dienergia", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("discountOption", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("withheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("withheldPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("stampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("stampDutyPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("feesAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("feesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("otherTaxesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("otherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("deductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("lineComments", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public InvoiceRowType() {
        }
        
        /// <summary>
        /// <para>
        /// ΑΑ Γραμμής
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual int lineNumber {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("lineNumber", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("lineNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "lineNumber", lineNumberLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσότητα
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> quantity {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("quantity", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("quantity", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "quantity", quantityLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Είδος Ποσότητας
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> measurementUnit {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("measurementUnit", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("measurementUnit", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "measurementUnit", global::www.aade.gr.myDATA.invoice.v1.Item0.QuantityType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Επισήμανση
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> invoiceDetailType {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceDetailType", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("invoiceDetailType", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "invoiceDetailType", global::www.aade.gr.myDATA.invoice.v1.Item0.InvoiceDetailType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Καθαρή Αξία
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal netValue {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("netValue", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("netValue", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "netValue", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία ΦΠΑ
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual int vatCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vatCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("vatCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "vatCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.VatType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό ΦΠΑ
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal vatAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("vatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "vatAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Αιτίας Εξαίρεσης ΦΠΑ
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> vatExemptionCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vatExemptionCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("vatExemptionCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "vatExemptionCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.VatExemptionType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// ΠΟΛ 1177/2018 Αρ. 27
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual ShipType dienergia {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("dienergia", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((ShipType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("dienergia", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Δικαίωμα Έκπτωσης
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<bool> discountOption {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("discountOption", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("discountOption", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Παρ. Φόρου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> withheldAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("withheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("withheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "withheldAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Συντελεστή  Παρ. Φόρου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> withheldPercentCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("withheldPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("withheldPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "withheldPercentCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.WithheldType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Χαρτοσήμου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> stampDutyAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("stampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("stampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "stampDutyAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Συντελεστή  Χαρτοσήμου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> stampDutyPercentCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("stampDutyPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("stampDutyPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "stampDutyPercentCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.StampDutyType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Τελών
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> feesAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("feesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("feesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "feesAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Συντελεστή Τελών
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> feesPercentCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("feesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("feesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "feesPercentCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.FeesType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Συντελεστή Λοιπών Φόρων
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> otherTaxesPercentCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("otherTaxesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("otherTaxesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "otherTaxesPercentCategory", global::www.aade.gr.myDATA.invoice.v1.Item0.OtherTaxesType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Φόρου Διαμονης
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> otherTaxesAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("otherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("otherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "otherTaxesAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Κρατήσεων
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> deductionsAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("deductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("deductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "deductionsAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σχόλια Γραμμής
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual string lineComments {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("lineComments", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("lineComments", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "lineComments", lineCommentsLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λίστα Χαρακτηρισμών Εσόδων
        /// </para>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual IList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType> incomeClassification {
            get {
                if ((this.incomeClassificationField == null)) {
                    this.incomeClassificationField = new XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.incomeClassificationField;
            }
            set {
                if ((value == null)) {
                    this.incomeClassificationField = null;
                }
                else {
                    if ((this.incomeClassificationField == null)) {
                        this.incomeClassificationField = XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>(this.incomeClassificationField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Λίστα Χαρακτηρισμού Εξόδων
        /// </para>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, quantity?, measurementUnit?, invoiceDetailType?, netValue, vatCategory, vatAmount, vatExemptionCategory?, dienergia?, discountOption?, withheldAmount?, withheldPercentCategory?, stampDutyAmount?, stampDutyPercentCategory?, feesAmount?, feesPercentCategory?, otherTaxesPercentCategory?, otherTaxesAmount?, deductionsAmount?, lineComments?, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual IList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType> expensesClassification {
            get {
                if ((this.expensesClassificationField == null)) {
                    this.expensesClassificationField = new XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.expensesClassificationField;
            }
            set {
                if ((value == null)) {
                    this.expensesClassificationField = null;
                }
                else {
                    if ((this.expensesClassificationField == null)) {
                        this.expensesClassificationField = XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>(this.expensesClassificationField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoiceRowType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoiceRowType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("lineNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("quantity", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("measurementUnit", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceDetailType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("netValue", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vatCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vatExemptionCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("dienergia", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(ShipType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("discountOption", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(bool));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("withheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("withheldPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("stampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("stampDutyPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("feesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("feesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("otherTaxesPercentCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("otherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("deductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("lineComments", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        private class lineNumberLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(256)), null, 0, 0, null, null, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private lineNumberLocalType() {
            }
        }
        
        private class quantityLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(512)), null, 0, 0, null, null, 0, 0m, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private quantityLocalType() {
            }
        }
        
        /// <summary>
        /// <para>
        /// Σχόλια
        /// </para>
        /// </summary>
        private class lineCommentsLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private lineCommentsLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
    /// </para>
    /// </summary>
    public partial class InvoiceSummaryType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType> incomeClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType> expensesClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator InvoiceSummaryType(XElement xe) { return XTypedServices.ToXTypedElement<InvoiceSummaryType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoiceSummaryType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalNetValue", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalVatAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalWithheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalFeesAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalStampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalOtherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalDeductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("totalGrossValue", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public InvoiceSummaryType() {
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Καθαρής Αξίας
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalNetValue {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalNetValue", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalNetValue", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalNetValue", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο ΦΠΑ
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalVatAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalVatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalVatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalVatAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Παρ. Φόρων
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalWithheldAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalWithheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalWithheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalWithheldAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Τελών
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalFeesAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalFeesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalFeesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalFeesAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Χαρτοσήμου
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalStampDutyAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalStampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalStampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalStampDutyAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Λοιπών Φόρων
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalOtherTaxesAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalOtherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalOtherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalOtherTaxesAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Σύνολο Κρατήσεων
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalDeductionsAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalDeductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalDeductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalDeductionsAmount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Συνολική Αξία
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual decimal totalGrossValue {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("totalGrossValue", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("totalGrossValue", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "totalGrossValue", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λίστα Χαρακτηρισμών Εσόδων
        /// </para>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual IList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType> incomeClassification {
            get {
                if ((this.incomeClassificationField == null)) {
                    this.incomeClassificationField = new XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.incomeClassificationField;
            }
            set {
                if ((value == null)) {
                    this.incomeClassificationField = null;
                }
                else {
                    if ((this.incomeClassificationField == null)) {
                        this.incomeClassificationField = XTypedList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType>(this.incomeClassificationField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (totalNetValue, totalVatAmount, totalWithheldAmount, totalFeesAmount, totalStampDutyAmount, totalOtherTaxesAmount, totalDeductionsAmount, totalGrossValue, incomeClassification*, expensesClassification*)
        /// </para>
        /// </summary>
        public virtual IList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType> expensesClassification {
            get {
                if ((this.expensesClassificationField == null)) {
                    this.expensesClassificationField = new XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                }
                return this.expensesClassificationField;
            }
            set {
                if ((value == null)) {
                    this.expensesClassificationField = null;
                }
                else {
                    if ((this.expensesClassificationField == null)) {
                        this.expensesClassificationField = XTypedList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType>(this.expensesClassificationField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoiceSummaryType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoiceSummaryType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalNetValue", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalVatAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalWithheldAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalFeesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalStampDutyAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalOtherTaxesAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalDeductionsAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("totalGrossValue", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesClassification", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (vatNumber, country, branch, name?, address?)
    /// </para>
    /// </summary>
    public partial class PartyType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator PartyType(XElement xe) { return XTypedServices.ToXTypedElement<PartyType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static PartyType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("vatNumber", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("country", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("branch", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("name", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("address", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public PartyType() {
        }
        
        /// <summary>
        /// <para>
        /// ΑΦΜ
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public virtual string vatNumber {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("vatNumber", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("vatNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κωδ, Χώρας
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public virtual CountryType country {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("country", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((CountryType)(Enum.Parse(typeof(CountryType), XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype))));
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("country", "http://www.aade.gr/myDATA/invoice/v1.0"), value.ToString(), "country", global::www.aade.gr.myDATA.invoice.v1.Item0.CountryTypeValidator.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αρ. Εγκατάστασης
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public virtual int branch {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("branch", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("branch", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Επωνυμία
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public virtual string name {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("name", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("name", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "name", nameLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Διεύθυνση
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (vatNumber, country, branch, name?, address?)
        /// </para>
        /// </summary>
        public virtual AddressType address {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("address", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return ((AddressType)(x));
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("address", "http://www.aade.gr/myDATA/invoice/v1.0"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("PartyType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<PartyType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("vatNumber", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("country", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("branch", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("name", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("address", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(AddressType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Επωνυμία
        /// </para>
        /// </summary>
        private class nameLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private nameLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (street?, number?, postalCode, city)
    /// </para>
    /// </summary>
    public partial class AddressType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator AddressType(XElement xe) { return XTypedServices.ToXTypedElement<AddressType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static AddressType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("street", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("number", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("postalCode", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("city", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (street?, number?, postalCode, city)
        /// </para>
        /// </summary>
        public AddressType() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, number?, postalCode, city)
        /// </para>
        /// </summary>
        public virtual string street {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("street", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("street", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "street", streetLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αριθμός
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (street?, number?, postalCode, city)
        /// </para>
        /// </summary>
        public virtual string number {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("number", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("number", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// ΤΚ
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street?, number?, postalCode, city)
        /// </para>
        /// </summary>
        public virtual string postalCode {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("postalCode", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("postalCode", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (street?, number?, postalCode, city)
        /// </para>
        /// </summary>
        public virtual string city {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("city", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("city", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "city", cityLocalType.TypeDefinition);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("AddressType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<AddressType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("street", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("number", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("postalCode", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("city", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Επωνυμία
        /// </para>
        /// </summary>
        private class streetLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private streetLocalType() {
            }
        }
        
        /// <summary>
        /// <para>
        /// Πόλη
        /// </para>
        /// </summary>
        private class cityLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private cityLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (applicationId, applicationDate, doy?, shipId)
    /// </para>
    /// </summary>
    public partial class ShipType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator ShipType(XElement xe) { return XTypedServices.ToXTypedElement<ShipType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static ShipType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("applicationId", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("applicationDate", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("doy", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("shipId", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (applicationId, applicationDate, doy?, shipId)
        /// </para>
        /// </summary>
        public ShipType() {
        }
        
        /// <summary>
        /// <para>
        /// Αριθμός Δήλωσης διενέργειας δραστηριότητας
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (applicationId, applicationDate, doy?, shipId)
        /// </para>
        /// </summary>
        public virtual string applicationId {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("applicationId", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("applicationId", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ημερομηνία Δήλωσης
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (applicationId, applicationDate, doy?, shipId)
        /// </para>
        /// </summary>
        public virtual System.DateTime applicationDate {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("applicationDate", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("applicationDate", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (applicationId, applicationDate, doy?, shipId)
        /// </para>
        /// </summary>
        public virtual string doy {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("doy", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("doy", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "doy", doyLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Στοιχεία Πλοίου
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (applicationId, applicationDate, doy?, shipId)
        /// </para>
        /// </summary>
        public virtual string shipId {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("shipId", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("shipId", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("ShipType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<ShipType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("applicationId", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("applicationDate", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(System.DateTime));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("doy", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("shipId", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// ΔΟΥ Δήλωσης
        /// </para>
        /// </summary>
        private class doyLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 150, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private doyLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (type, amount, paymentMethodInfo?)
    /// </para>
    /// </summary>
    public partial class PaymentMethodDetailType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator PaymentMethodDetailType(XElement xe) { return XTypedServices.ToXTypedElement<PaymentMethodDetailType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static PaymentMethodDetailType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("type", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("amount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("paymentMethodInfo", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (type, amount, paymentMethodInfo?)
        /// </para>
        /// </summary>
        public PaymentMethodDetailType() {
        }
        
        /// <summary>
        /// <para>
        /// Τύπος Πληρωμής
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (type, amount, paymentMethodInfo?)
        /// </para>
        /// </summary>
        public virtual int type {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("type", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("type", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "type", typeLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αναλογούν Ποσό
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (type, amount, paymentMethodInfo?)
        /// </para>
        /// </summary>
        public virtual decimal amount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("amount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("amount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "amount", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λοιπές Πληροφορίες
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (type, amount, paymentMethodInfo?)
        /// </para>
        /// </summary>
        public virtual string paymentMethodInfo {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("paymentMethodInfo", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("paymentMethodInfo", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("PaymentMethodDetailType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<PaymentMethodDetailType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("type", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("amount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("paymentMethodInfo", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        private class typeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 5, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private typeLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
    /// </para>
    /// </summary>
    public partial class TaxTotalsType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator TaxTotalsType(XElement xe) { return XTypedServices.ToXTypedElement<TaxTotalsType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static TaxTotalsType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("taxType", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("taxCategory", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("underlyingValue", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("taxAmount", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("id", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public TaxTotalsType() {
        }
        
        /// <summary>
        /// <para>
        /// Είδος Φόρου
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public virtual sbyte taxType {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("taxType", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<sbyte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("taxType", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "taxType", taxTypeLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Φόρου
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<sbyte> taxCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("taxCategory", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<sbyte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("taxCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "taxCategory", taxCategoryLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Υποκείμενη Αξία
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<decimal> underlyingValue {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("underlyingValue", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("underlyingValue", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "underlyingValue", global::www.aade.gr.myDATA.invoice.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Φόρου
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public virtual decimal taxAmount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("taxAmount", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("taxAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), value, "taxAmount", taxAmountLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (taxType, taxCategory?, underlyingValue?, taxAmount, id?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<sbyte> id {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("id", "http://www.aade.gr/myDATA/invoice/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<sbyte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("id", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("TaxTotalsType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<TaxTotalsType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("taxType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(sbyte));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("taxCategory", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(sbyte));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("underlyingValue", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("taxAmount", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("id", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(sbyte));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        private class taxTypeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 5, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private taxTypeLocalType() {
            }
        }
        
        private class taxCategoryLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(256)), null, 0, 0, null, null, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private taxCategoryLocalType() {
            }
        }
        
        private class taxAmountLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2304)), null, 2, 0, null, null, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private taxAmountLocalType() {
            }
        }
    }
    
    public enum CountryType {
        
        AD,
        
        AE,
        
        AF,
        
        AG,
        
        AI,
        
        AL,
        
        AM,
        
        AN,
        
        AO,
        
        AQ,
        
        AR,
        
        AS,
        
        AT,
        
        AU,
        
        AW,
        
        AX,
        
        AZ,
        
        BA,
        
        BB,
        
        BD,
        
        BE,
        
        BF,
        
        BG,
        
        BH,
        
        BI,
        
        BJ,
        
        BL,
        
        BM,
        
        BN,
        
        BO,
        
        BR,
        
        BS,
        
        BT,
        
        BV,
        
        BW,
        
        BY,
        
        BZ,
        
        CA,
        
        CC,
        
        CD,
        
        CF,
        
        CG,
        
        CH,
        
        CI,
        
        CK,
        
        CL,
        
        CM,
        
        CN,
        
        CO,
        
        CR,
        
        CU,
        
        CV,
        
        CX,
        
        CY,
        
        CZ,
        
        DE,
        
        DJ,
        
        DK,
        
        DM,
        
        DO,
        
        DZ,
        
        EC,
        
        EE,
        
        EG,
        
        EH,
        
        ER,
        
        ES,
        
        ET,
        
        FI,
        
        FJ,
        
        FK,
        
        FM,
        
        FO,
        
        FR,
        
        GA,
        
        GB,
        
        GD,
        
        GE,
        
        GF,
        
        GG,
        
        GH,
        
        GI,
        
        GL,
        
        GM,
        
        GN,
        
        GP,
        
        GQ,
        
        GR,
        
        GS,
        
        GT,
        
        GU,
        
        GW,
        
        GY,
        
        HK,
        
        HM,
        
        HN,
        
        HR,
        
        HT,
        
        HU,
        
        ID,
        
        IE,
        
        IL,
        
        IM,
        
        IN,
        
        IO,
        
        IQ,
        
        IR,
        
        IS,
        
        IT,
        
        JE,
        
        JM,
        
        JO,
        
        JP,
        
        KE,
        
        KG,
        
        KH,
        
        KI,
        
        KM,
        
        KN,
        
        KP,
        
        KR,
        
        KW,
        
        KY,
        
        KZ,
        
        LA,
        
        LB,
        
        LC,
        
        LI,
        
        LK,
        
        LR,
        
        LS,
        
        LT,
        
        LU,
        
        LV,
        
        LY,
        
        MA,
        
        MC,
        
        MD,
        
        ME,
        
        MF,
        
        MG,
        
        MH,
        
        MK,
        
        ML,
        
        MM,
        
        MN,
        
        MO,
        
        MP,
        
        MQ,
        
        MR,
        
        MS,
        
        MT,
        
        MU,
        
        MV,
        
        MW,
        
        MX,
        
        MY,
        
        MZ,
        
        NA,
        
        NC,
        
        NE,
        
        NF,
        
        NG,
        
        NI,
        
        NL,
        
        NO,
        
        NP,
        
        NR,
        
        NU,
        
        NZ,
        
        OM,
        
        PA,
        
        PE,
        
        PF,
        
        PG,
        
        PH,
        
        PK,
        
        PL,
        
        PM,
        
        PN,
        
        PR,
        
        PS,
        
        PT,
        
        PW,
        
        PY,
        
        QA,
        
        RE,
        
        RO,
        
        RS,
        
        RU,
        
        RW,
        
        SA,
        
        SB,
        
        SC,
        
        SD,
        
        SE,
        
        SG,
        
        SH,
        
        SI,
        
        SJ,
        
        SK,
        
        SL,
        
        SM,
        
        SN,
        
        SO,
        
        SR,
        
        ST,
        
        SV,
        
        SY,
        
        SZ,
        
        TC,
        
        TD,
        
        TF,
        
        TG,
        
        TH,
        
        TJ,
        
        TK,
        
        TL,
        
        TM,
        
        TN,
        
        TO,
        
        TR,
        
        TT,
        
        TV,
        
        TW,
        
        TZ,
        
        UA,
        
        UG,
        
        UM,
        
        US,
        
        UY,
        
        UZ,
        
        VA,
        
        VC,
        
        VE,
        
        VG,
        
        VI,
        
        VN,
        
        VU,
        
        WF,
        
        WS,
        
        YE,
        
        YT,
        
        ZA,
        
        ZM,
        
        ZW,
    }
    
    public sealed class CountryTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AX",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BV",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GF",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GP",
                        "GQ",
                        "GR",
                        "GS",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HM",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MQ",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NF",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "ST",
                        "SV",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TF",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "UM",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CountryTypeValidator() {
        }
    }
    
    public sealed class InvoiceType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.4",
                        "1.5",
                        "1.6",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.4",
                        "3.1",
                        "3.2",
                        "4",
                        "5.1",
                        "5.2",
                        "6.1",
                        "6.2",
                        "7.1",
                        "8.1",
                        "8.2",
                        "11.1",
                        "11.2",
                        "11.3",
                        "11.4",
                        "11.5",
                        "12",
                        "13.1",
                        "13.2",
                        "13.3",
                        "13.4",
                        "13.30",
                        "13.31",
                        "14.1",
                        "14.2",
                        "14.3",
                        "14.4",
                        "14.5",
                        "14.30",
                        "14.31",
                        "15.1",
                        "16.1",
                        "17.1",
                        "17.2",
                        "17.3",
                        "17.4",
                        "17.5",
                        "17.6"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private InvoiceType() {
        }
    }
    
    public enum CurrencyType {
        
        AED,
        
        AFN,
        
        ALL,
        
        AMD,
        
        ANG,
        
        AOA,
        
        ARS,
        
        AUD,
        
        AWG,
        
        AZN,
        
        BAM,
        
        BBD,
        
        BDT,
        
        BGN,
        
        BHD,
        
        BIF,
        
        BMD,
        
        BND,
        
        BOB,
        
        BOV,
        
        BRL,
        
        BSD,
        
        BTN,
        
        BWP,
        
        BYR,
        
        BZD,
        
        CAD,
        
        CDF,
        
        CHF,
        
        CLF,
        
        CLP,
        
        CNY,
        
        COP,
        
        COU,
        
        CRC,
        
        CUC,
        
        CUP,
        
        CVE,
        
        CZK,
        
        DJF,
        
        DKK,
        
        DOP,
        
        DZD,
        
        EEK,
        
        EGP,
        
        ERN,
        
        ETB,
        
        EUR,
        
        FJD,
        
        FKP,
        
        GBP,
        
        GEL,
        
        GHS,
        
        GIP,
        
        GMD,
        
        GNF,
        
        GTQ,
        
        GWP,
        
        GYD,
        
        HKD,
        
        HNL,
        
        HRK,
        
        HTG,
        
        HUF,
        
        IDR,
        
        ILS,
        
        INR,
        
        IQD,
        
        IRR,
        
        ISK,
        
        JMD,
        
        JOD,
        
        JPY,
        
        KES,
        
        KGS,
        
        KHR,
        
        KMF,
        
        KPW,
        
        KRW,
        
        KWD,
        
        KYD,
        
        KZT,
        
        LAK,
        
        LBP,
        
        LKR,
        
        LRD,
        
        LSL,
        
        LTL,
        
        LVL,
        
        LYD,
        
        MAD,
        
        MDL,
        
        MGA,
        
        MKD,
        
        MMK,
        
        MNT,
        
        MOP,
        
        MRO,
        
        MUR,
        
        MVR,
        
        MWK,
        
        MXN,
        
        MXV,
        
        MYR,
        
        MZN,
        
        NAD,
        
        NGN,
        
        NIO,
        
        NOK,
        
        NPR,
        
        NZD,
        
        OMR,
        
        PAB,
        
        PEN,
        
        PGK,
        
        PHP,
        
        PKR,
        
        PLN,
        
        PYG,
        
        QAR,
        
        RON,
        
        RSD,
        
        RUB,
        
        RWF,
        
        SAR,
        
        SBD,
        
        SCR,
        
        SDG,
        
        SEK,
        
        SGD,
        
        SHP,
        
        SLL,
        
        SOS,
        
        SRD,
        
        STD,
        
        SVC,
        
        SYP,
        
        SZL,
        
        THB,
        
        TJS,
        
        TMT,
        
        TND,
        
        TOP,
        
        TRY,
        
        TTD,
        
        TVD,
        
        TWD,
        
        TZS,
        
        UAH,
        
        UGX,
        
        USD,
        
        UYU,
        
        UZS,
        
        VEF,
        
        VND,
        
        VUV,
        
        WST,
        
        XAF,
        
        XCD,
        
        XOF,
        
        XPD,
        
        XPF,
        
        YER,
        
        ZAR,
        
        ZMK,
        
        ZWL,
    }
    
    public sealed class CurrencyTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EEK",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GWP",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XOF",
                        "XPD",
                        "XPF",
                        "YER",
                        "ZAR",
                        "ZMK",
                        "ZWL"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CurrencyTypeValidator() {
        }
    }
    
    public sealed class ExchangeRateType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2624)), null, 5, 0, null, 50000m, 0, 0m, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ExchangeRateType() {
        }
    }
    
    public sealed class InvoiceDetailType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 2, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private InvoiceDetailType() {
        }
    }
    
    public sealed class QuantityType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 3, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private QuantityType() {
        }
    }
    
    public sealed class VatType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 8, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private VatType() {
        }
    }
    
    public sealed class VatExemptionType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 23, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private VatExemptionType() {
        }
    }
    
    public sealed class WithheldType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 15, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private WithheldType() {
        }
    }
    
    public sealed class StampDutyType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 3, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StampDutyType() {
        }
    }
    
    public sealed class FeesType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 9, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private FeesType() {
        }
    }
    
    public sealed class OtherTaxesType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 14, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private OtherTaxesType() {
        }
    }
    
    public sealed class DeductionsType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2368)), null, 2, 0, null, 100m, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DeductionsType() {
        }
    }
    
    public sealed class AmountType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2304)), null, 2, 0, null, null, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AmountType() {
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (nextPartitionKey, nextRowKey)
    /// </para>
    /// </summary>
    public partial class continuationTokenType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator continuationTokenType(XElement xe) { return XTypedServices.ToXTypedElement<continuationTokenType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static continuationTokenType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("nextPartitionKey", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("nextRowKey", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (nextPartitionKey, nextRowKey)
        /// </para>
        /// </summary>
        public continuationTokenType() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nextPartitionKey, nextRowKey)
        /// </para>
        /// </summary>
        public virtual string nextPartitionKey {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("nextPartitionKey", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("nextPartitionKey", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (nextPartitionKey, nextRowKey)
        /// </para>
        /// </summary>
        public virtual string nextRowKey {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("nextRowKey", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("nextRowKey", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("continuationTokenType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<continuationTokenType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("nextPartitionKey", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("nextRowKey", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(string));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (invoiceMark, cancellationMark, cancellationDate)
    /// </para>
    /// </summary>
    public partial class CancelledInvoiceType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator CancelledInvoiceType(XElement xe) { return XTypedServices.ToXTypedElement<CancelledInvoiceType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static CancelledInvoiceType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("invoiceMark", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("cancellationMark", "http://www.aade.gr/myDATA/invoice/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("cancellationDate", "http://www.aade.gr/myDATA/invoice/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (invoiceMark, cancellationMark, cancellationDate)
        /// </para>
        /// </summary>
        public CancelledInvoiceType() {
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης του ακυρωμένου Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, cancellationMark, cancellationDate)
        /// </para>
        /// </summary>
        public virtual long invoiceMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceMark", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoiceMark", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης της Ακύρωσης
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, cancellationMark, cancellationDate)
        /// </para>
        /// </summary>
        public virtual long cancellationMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("cancellationMark", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("cancellationMark", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ημερομηνία Ακύρωσης Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, cancellationMark, cancellationDate)
        /// </para>
        /// </summary>
        public virtual System.DateTime cancellationDate {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("cancellationDate", "http://www.aade.gr/myDATA/invoice/v1.0"));
                return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("cancellationDate", "http://www.aade.gr/myDATA/invoice/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("CancelledInvoiceType", "http://www.aade.gr/myDATA/invoice/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<CancelledInvoiceType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceMark", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("cancellationMark", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("cancellationDate", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(System.DateTime));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        private static Dictionary<System.Xml.Linq.XName, System.Type> typeDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        private static Dictionary<System.Xml.Linq.XName, System.Type> elementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildTypeDictionary();
            BuildElementDictionary();
        }
        
        private LinqToXsdTypeManager() {
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<System.Xml.Linq.XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return typeDictionary;
            }
        }
        
        Dictionary<System.Xml.Linq.XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildTypeDictionary() {
            typeDictionary.Add(System.Xml.Linq.XName.Get("AadeBookInvoiceType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.AadeBookInvoiceType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoiceHeaderType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.InvoiceHeaderType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoiceRowType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.InvoiceRowType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoiceSummaryType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.InvoiceSummaryType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("PartyType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.PartyType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("AddressType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.AddressType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("ShipType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.ShipType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("PaymentMethodDetailType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.PaymentMethodDetailType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("TaxTotalsType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.TaxTotalsType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("continuationTokenType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.continuationTokenType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("CancelledInvoiceType", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.CancelledInvoiceType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoiceIncomeClassificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoiceIncomeClassificationType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoicesIncomeClassificationDetailType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.InvoicesIncomeClassificationDetailType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("IncomeClassificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoiceExpensesClassificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoiceExpensesClassificationType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("InvoicesExpensesClassificationDetailType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.InvoicesExpensesClassificationDetailType));
            typeDictionary.Add(System.Xml.Linq.XName.Get("ExpensesClassificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationType));
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(System.Xml.Linq.XName.Get("InvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.InvoicesDoc));
            elementDictionary.Add(System.Xml.Linq.XName.Get("RequestedDoc", "http://www.aade.gr/myDATA/invoice/v1.0"), typeof(global::www.aade.gr.myDATA.invoice.v1.Item0.RequestedDoc));
            elementDictionary.Add(System.Xml.Linq.XName.Get("IncomeClassificationsDoc", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationsDoc));
            elementDictionary.Add(System.Xml.Linq.XName.Get("ExpensesClassificationsDoc", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationsDoc));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[System.Xml.Linq.XName.Get("InvoicesDoc", "http://www.aade.gr/myDATA/invoice/v1.0")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

		public InvoicesDoc InvoicesDoc {  get {return rootObject as InvoicesDoc; } }

		public RequestedDoc RequestedDoc {  get {return rootObject as RequestedDoc; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(InvoicesDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(RequestedDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public virtual XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public virtual XTypedElement Root {
            get {
                return rootObject;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

		public global::www.aade.gr.myDATA.invoice.v1.Item0.InvoicesDoc InvoicesDoc {  get {return rootObject as global::www.aade.gr.myDATA.invoice.v1.Item0.InvoicesDoc; } }

		public global::www.aade.gr.myDATA.invoice.v1.Item0.RequestedDoc RequestedDoc {  get {return rootObject as global::www.aade.gr.myDATA.invoice.v1.Item0.RequestedDoc; } }

		public global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationsDoc IncomeClassificationsDoc {  get {return rootObject as global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationsDoc; } }

		public global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationsDoc ExpensesClassificationsDoc {  get {return rootObject as global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationsDoc; } }
        
        private XRoot() {
        }
        
        public XRoot(global::www.aade.gr.myDATA.invoice.v1.Item0.InvoicesDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::www.aade.gr.myDATA.invoice.v1.Item0.RequestedDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationsDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationsDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public virtual XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public virtual XTypedElement Root {
            get {
                return rootObject;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
namespace https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0 {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;

    /// <summary>
    /// <para>
    /// Regular expression: (incomeInvoiceClassification)+
    /// </para>
    /// </summary>
    public partial class IncomeClassificationsDoc : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<InvoiceIncomeClassificationType> incomeInvoiceClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
		public static explicit operator IncomeClassificationsDoc(XElement xe) { return XTypedServices.ToXTypedElement<IncomeClassificationsDoc>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static IncomeClassificationsDoc() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (incomeInvoiceClassification)+
        /// </para>
        /// </summary>
        public IncomeClassificationsDoc() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (incomeInvoiceClassification)+
        /// </para>
        /// </summary>
        public virtual IList<InvoiceIncomeClassificationType> incomeInvoiceClassification {
            get {
                if ((this.incomeInvoiceClassificationField == null)) {
                    this.incomeInvoiceClassificationField = new XTypedList<InvoiceIncomeClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("incomeInvoiceClassification", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                }
                return this.incomeInvoiceClassificationField;
            }
            set {
                if ((value == null)) {
                    this.incomeInvoiceClassificationField = null;
                }
                else {
                    if ((this.incomeInvoiceClassificationField == null)) {
                        this.incomeInvoiceClassificationField = XTypedList<InvoiceIncomeClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("incomeInvoiceClassification", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<InvoiceIncomeClassificationType>(this.incomeInvoiceClassificationField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("IncomeClassificationsDoc", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static IncomeClassificationsDoc Load(string xmlFile) {
            return XTypedServices.Load<IncomeClassificationsDoc>(xmlFile);
        }
        
        public static IncomeClassificationsDoc Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<IncomeClassificationsDoc>(xmlFile);
        }
        
        public static IncomeClassificationsDoc Parse(string xml) {
            return XTypedServices.Parse<IncomeClassificationsDoc>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<IncomeClassificationsDoc>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeInvoiceClassification", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(InvoiceIncomeClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
    /// </para>
    /// </summary>
    public partial class InvoiceIncomeClassificationType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<InvoicesIncomeClassificationDetailType> invoicesIncomeClassificationDetailsField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
		public static explicit operator InvoiceIncomeClassificationType(XElement xe) { return XTypedServices.ToXTypedElement<InvoiceIncomeClassificationType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoiceIncomeClassificationType() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
        /// </para>
        /// </summary>
        public InvoiceIncomeClassificationType() {
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual long invoiceMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αποδεικτικό Λήψης Χαρακτηρισμού Εσόδων. Συμπληρώνεται από την Υπηρεσία
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual System.Nullable<long> classificationMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αιτιολογία Συναλλαγής
        /// </para>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Setter: Appends
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> transactionMode {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, "transactionMode", transactionModeLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Setter: Appends
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesIncomeClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual IList<InvoicesIncomeClassificationDetailType> invoicesIncomeClassificationDetails {
            get {
                if ((this.invoicesIncomeClassificationDetailsField == null)) {
                    this.invoicesIncomeClassificationDetailsField = new XTypedList<InvoicesIncomeClassificationDetailType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("invoicesIncomeClassificationDetails", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                }
                return this.invoicesIncomeClassificationDetailsField;
            }
            set {
                if ((value == null)) {
                    this.invoicesIncomeClassificationDetailsField = null;
                }
                else {
                    if ((this.invoicesIncomeClassificationDetailsField == null)) {
                        this.invoicesIncomeClassificationDetailsField = XTypedList<InvoicesIncomeClassificationDetailType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("invoicesIncomeClassificationDetails", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<InvoicesIncomeClassificationDetailType>(this.invoicesIncomeClassificationDetailsField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoiceIncomeClassificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoiceIncomeClassificationType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoicesIncomeClassificationDetails", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(InvoicesIncomeClassificationDetailType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
        
        private class transactionModeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 1, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private transactionModeLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (lineNumber, incomeClassificationDetailData+)
    /// </para>
    /// </summary>
    public partial class InvoicesIncomeClassificationDetailType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<IncomeClassificationType> incomeClassificationDetailDataField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator InvoicesIncomeClassificationDetailType(XElement xe) { return XTypedServices.ToXTypedElement<InvoicesIncomeClassificationDetailType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoicesIncomeClassificationDetailType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("incomeClassificationDetailData", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (lineNumber, incomeClassificationDetailData+)
        /// </para>
        /// </summary>
        public InvoicesIncomeClassificationDetailType() {
        }
        
        /// <summary>
        /// <para>
        /// Γραμμή Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, incomeClassificationDetailData+)
        /// </para>
        /// </summary>
        public virtual int lineNumber {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λίστα Χαρακτηρισμών Εσόδων
        /// </para>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, incomeClassificationDetailData+)
        /// </para>
        /// </summary>
        public virtual IList<IncomeClassificationType> incomeClassificationDetailData {
            get {
                if ((this.incomeClassificationDetailDataField == null)) {
                    this.incomeClassificationDetailDataField = new XTypedList<IncomeClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("incomeClassificationDetailData", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                }
                return this.incomeClassificationDetailDataField;
            }
            set {
                if ((value == null)) {
                    this.incomeClassificationDetailDataField = null;
                }
                else {
                    if ((this.incomeClassificationDetailDataField == null)) {
                        this.incomeClassificationDetailDataField = XTypedList<IncomeClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("incomeClassificationDetailData", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<IncomeClassificationType>(this.incomeClassificationDetailDataField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoicesIncomeClassificationDetailType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoicesIncomeClassificationDetailType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("incomeClassificationDetailData", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(IncomeClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (classificationType, classificationCategory, amount, id?)
    /// </para>
    /// </summary>
    public partial class IncomeClassificationType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator IncomeClassificationType(XElement xe) { return XTypedServices.ToXTypedElement<IncomeClassificationType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static IncomeClassificationType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (classificationType, classificationCategory, amount, id?)
        /// </para>
        /// </summary>
        public IncomeClassificationType() {
        }
        
        /// <summary>
        /// <para>
        /// Κωδικός Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (classificationType, classificationCategory, amount, id?)
        /// </para>
        /// </summary>
        public virtual IncomeClassificationValueType classificationType {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                return ((IncomeClassificationValueType)(Enum.Parse(typeof(IncomeClassificationValueType), XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype))));
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value.ToString(), "classificationType", global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationValueTypeValidator.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (classificationType, classificationCategory, amount, id?)
        /// </para>
        /// </summary>
        public virtual IncomeClassificationCategoryType classificationCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                return ((IncomeClassificationCategoryType)(Enum.Parse(typeof(IncomeClassificationCategoryType), XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype))));
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value.ToString(), "classificationCategory", global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.IncomeClassificationCategoryTypeValidator.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (classificationType, classificationCategory, amount, id?)
        /// </para>
        /// </summary>
        public virtual decimal amount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, "amount", global::https.www.aade.gr.myDATA.incomeClassificaton.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (classificationType, classificationCategory, amount, id?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<sbyte> id {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<sbyte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("IncomeClassificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<IncomeClassificationType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/incomeClassificaton/v1.0"), typeof(sbyte));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    public enum IncomeClassificationValueType {
        
        E3_106,
        
        E3_205,
        
        E3_210,
        
        E3_305,
        
        E3_310,
        
        E3_318,
        
        E3_561_001,
        
        E3_561_002,
        
        E3_561_003,
        
        E3_561_004,
        
        E3_561_005,
        
        E3_561_006,
        
        E3_561_007,
        
        E3_562,
        
        E3_563,
        
        E3_564,
        
        E3_565,
        
        E3_566,
        
        E3_567,
        
        E3_568,
        
        E3_570,
        
        E3_595,
        
        E3_596,
        
        E3_597,
        
        E3_880_001,
        
        E3_880_002,
        
        E3_880_003,
        
        E3_880_004,
        
        E3_881_001,
        
        E3_881_002,
        
        E3_881_003,
        
        E3_881_004,
    }
    
    public sealed class IncomeClassificationValueTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "E3_106",
                        "E3_205",
                        "E3_210",
                        "E3_305",
                        "E3_310",
                        "E3_318",
                        "E3_561_001",
                        "E3_561_002",
                        "E3_561_003",
                        "E3_561_004",
                        "E3_561_005",
                        "E3_561_006",
                        "E3_561_007",
                        "E3_562",
                        "E3_563",
                        "E3_564",
                        "E3_565",
                        "E3_566",
                        "E3_567",
                        "E3_568",
                        "E3_570",
                        "E3_595",
                        "E3_596",
                        "E3_597",
                        "E3_880_001",
                        "E3_880_002",
                        "E3_880_003",
                        "E3_880_004",
                        "E3_881_001",
                        "E3_881_002",
                        "E3_881_003",
                        "E3_881_004"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IncomeClassificationValueTypeValidator() {
        }
    }
    
    public enum IncomeClassificationCategoryType {
        
        category1_1,
        
        category1_2,
        
        category1_3,
        
        category1_4,
        
        category1_5,
        
        category1_6,
        
        category1_7,
        
        category1_8,
        
        category1_9,
        
        category1_10,
        
        category1_95,
    }
    
    public sealed class IncomeClassificationCategoryTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "category1_1",
                        "category1_2",
                        "category1_3",
                        "category1_4",
                        "category1_5",
                        "category1_6",
                        "category1_7",
                        "category1_8",
                        "category1_9",
                        "category1_10",
                        "category1_95"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IncomeClassificationCategoryTypeValidator() {
        }
    }
    
    public sealed class AmountType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2304)), null, 2, 0, null, null, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AmountType() {
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

		public IncomeClassificationsDoc IncomeClassificationsDoc {  get {return rootObject as IncomeClassificationsDoc; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(IncomeClassificationsDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public virtual XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public virtual XTypedElement Root {
            get {
                return rootObject;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
namespace https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0 {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;

    /// <summary>
    /// <para>
    /// Regular expression: (expensesInvoiceClassification)+
    /// </para>
    /// </summary>
    public partial class ExpensesClassificationsDoc : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<InvoiceExpensesClassificationType> expensesInvoiceClassificationField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
		public static explicit operator ExpensesClassificationsDoc(XElement xe) { return XTypedServices.ToXTypedElement<ExpensesClassificationsDoc>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static ExpensesClassificationsDoc() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (expensesInvoiceClassification)+
        /// </para>
        /// </summary>
        public ExpensesClassificationsDoc() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (expensesInvoiceClassification)+
        /// </para>
        /// </summary>
        public virtual IList<InvoiceExpensesClassificationType> expensesInvoiceClassification {
            get {
                if ((this.expensesInvoiceClassificationField == null)) {
                    this.expensesInvoiceClassificationField = new XTypedList<InvoiceExpensesClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("expensesInvoiceClassification", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                }
                return this.expensesInvoiceClassificationField;
            }
            set {
                if ((value == null)) {
                    this.expensesInvoiceClassificationField = null;
                }
                else {
                    if ((this.expensesInvoiceClassificationField == null)) {
                        this.expensesInvoiceClassificationField = XTypedList<InvoiceExpensesClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("expensesInvoiceClassification", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<InvoiceExpensesClassificationType>(this.expensesInvoiceClassificationField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("ExpensesClassificationsDoc", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static ExpensesClassificationsDoc Load(string xmlFile) {
            return XTypedServices.Load<ExpensesClassificationsDoc>(xmlFile);
        }
        
        public static ExpensesClassificationsDoc Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<ExpensesClassificationsDoc>(xmlFile);
        }
        
        public static ExpensesClassificationsDoc Parse(string xml) {
            return XTypedServices.Parse<ExpensesClassificationsDoc>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<ExpensesClassificationsDoc>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesInvoiceClassification", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(InvoiceExpensesClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
    /// </para>
    /// </summary>
    public partial class InvoiceExpensesClassificationType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<InvoicesExpensesClassificationDetailType> invoicesExpensesClassificationDetailsField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
		public static explicit operator InvoiceExpensesClassificationType(XElement xe) { return XTypedServices.ToXTypedElement<InvoiceExpensesClassificationType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoiceExpensesClassificationType() {
            BuildElementDictionary();
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
        /// </para>
        /// </summary>
        public InvoiceExpensesClassificationType() {
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Καταχώρησης Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual long invoiceMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αποδεικτικό Λήψης Χαρακτηρισμού Εξόδων. Συμπληρώνεται από την Υπηρεσία
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual System.Nullable<long> classificationMark {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<long>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Long).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Αιτιολογία Συναλλαγής
        /// </para>
        /// <para>
        /// Occurrence: required, choice
        /// </para>
        /// <para>
        /// Setter: Appends
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual System.Nullable<int> transactionMode {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, "transactionMode", transactionModeLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required, repeating, choice
        /// </para>
        /// <para>
        /// Setter: Appends
        /// </para>
        /// <para>
        /// Regular expression: (invoiceMark, classificationMark?, (transactionMode | invoicesExpensesClassificationDetails+))
        /// </para>
        /// </summary>
        public virtual IList<InvoicesExpensesClassificationDetailType> invoicesExpensesClassificationDetails {
            get {
                if ((this.invoicesExpensesClassificationDetailsField == null)) {
                    this.invoicesExpensesClassificationDetailsField = new XTypedList<InvoicesExpensesClassificationDetailType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("invoicesExpensesClassificationDetails", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                }
                return this.invoicesExpensesClassificationDetailsField;
            }
            set {
                if ((value == null)) {
                    this.invoicesExpensesClassificationDetailsField = null;
                }
                else {
                    if ((this.invoicesExpensesClassificationDetailsField == null)) {
                        this.invoicesExpensesClassificationDetailsField = XTypedList<InvoicesExpensesClassificationDetailType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("invoicesExpensesClassificationDetails", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<InvoicesExpensesClassificationDetailType>(this.invoicesExpensesClassificationDetailsField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoiceExpensesClassificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoiceExpensesClassificationType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoiceMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationMark", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(long));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("transactionMode", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("invoicesExpensesClassificationDetails", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(InvoicesExpensesClassificationDetailType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return ContentModelEntity.Default;
        }
        
        private class transactionModeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 1, 0, null, 1, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
            
            private transactionModeLocalType() {
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (lineNumber, expensesClassificationDetailData+)
    /// </para>
    /// </summary>
    public partial class InvoicesExpensesClassificationDetailType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<ExpensesClassificationType> expensesClassificationDetailDataField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator InvoicesExpensesClassificationDetailType(XElement xe) { return XTypedServices.ToXTypedElement<InvoicesExpensesClassificationDetailType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static InvoicesExpensesClassificationDetailType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("expensesClassificationDetailData", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (lineNumber, expensesClassificationDetailData+)
        /// </para>
        /// </summary>
        public InvoicesExpensesClassificationDetailType() {
        }
        
        /// <summary>
        /// <para>
        /// Γραμμή Παραστατικού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, expensesClassificationDetailData+)
        /// </para>
        /// </summary>
        public virtual int lineNumber {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                return XTypedServices.ParseValue<int>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Int).Datatype);
            }
        }
        
        /// <summary>
        /// <para>
        /// Λίστα Χαρακτηρισμών Εσόδων
        /// </para>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (lineNumber, expensesClassificationDetailData+)
        /// </para>
        /// </summary>
        public virtual IList<ExpensesClassificationType> expensesClassificationDetailData {
            get {
                if ((this.expensesClassificationDetailDataField == null)) {
                    this.expensesClassificationDetailDataField = new XTypedList<ExpensesClassificationType>(this, LinqToXsdTypeManager.Instance, System.Xml.Linq.XName.Get("expensesClassificationDetailData", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                }
                return this.expensesClassificationDetailDataField;
            }
            set {
                if ((value == null)) {
                    this.expensesClassificationDetailDataField = null;
                }
                else {
                    if ((this.expensesClassificationDetailDataField == null)) {
                        this.expensesClassificationDetailDataField = XTypedList<ExpensesClassificationType>.Initialize(this, LinqToXsdTypeManager.Instance, value, System.Xml.Linq.XName.Get("expensesClassificationDetailData", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                    }
                    else {
                        XTypedServices.SetList<ExpensesClassificationType>(this.expensesClassificationDetailDataField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("InvoicesExpensesClassificationDetailType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<InvoicesExpensesClassificationDetailType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("lineNumber", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(int));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("expensesClassificationDetailData", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(ExpensesClassificationType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
    /// </para>
    /// </summary>
    public partial class ExpensesClassificationType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static Dictionary<System.Xml.Linq.XName, System.Type> localElementDictionary = new Dictionary<System.Xml.Linq.XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
		public static explicit operator ExpensesClassificationType(XElement xe) { return XTypedServices.ToXTypedElement<ExpensesClassificationType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static ExpensesClassificationType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")), new NamedContentModelEntity(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
        /// </para>
        /// </summary>
        public ExpensesClassificationType() {
        }
        
        /// <summary>
        /// <para>
        /// Κωδικός Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
        /// </para>
        /// </summary>
        public virtual string classificationType {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, "classificationType", classificationTypeLocalType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Κατηγορία Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
        /// </para>
        /// </summary>
        public virtual ExpensesClassificationCategoryType classificationCategory {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                return ((ExpensesClassificationCategoryType)(Enum.Parse(typeof(ExpensesClassificationCategoryType), XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype))));
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value.ToString(), "classificationCategory", global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.ExpensesClassificationCategoryTypeValidator.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Ποσό Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
        /// </para>
        /// </summary>
        public virtual decimal amount {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetElementWithValidation(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, "amount", global::https.www.aade.gr.myDATA.expensesClassificaton.v1.Item0.AmountType.TypeDefinition);
            }
        }
        
        /// <summary>
        /// <para>
        /// Μοναδικός Αριθμός Χαρακτηρισμού
        /// </para>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (classificationType?, classificationCategory?, amount, id?)
        /// </para>
        /// </summary>
        public virtual System.Nullable<sbyte> id {
            get {
                XElement x = this.GetElement(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"));
                if ((x == null)) {
                    return null;
                }
                return XTypedServices.ParseValue<sbyte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
            set {
                this.SetElement(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Byte).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<System.Xml.Linq.XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        System.Xml.Linq.XName IXMetaData.SchemaName {
            get {
                return System.Xml.Linq.XName.Get("ExpensesClassificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Fragment;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<ExpensesClassificationType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationType", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("classificationCategory", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(string));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("amount", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(decimal));
            localElementDictionary.Add(System.Xml.Linq.XName.Get("id", "https://www.aade.gr/myDATA/expensesClassificaton/v1.0"), typeof(sbyte));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        private class classificationTypeLocalType {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                            "E3_101",
                            "E3_102_001",
                            "E3_102_002",
                            "E3_102_003",
                            "E3_102_004",
                            "E3_102_005",
                            "E3_102_006",
                            "E3_104",
                            "E3_201",
                            "E3_202_001",
                            "E3_202_002",
                            "E3_202_003",
                            "E3_202_004",
                            "E3_202_005",
                            "E3_204",
                            "E3_207",
                            "E3_209",
                            "E3_301",
                            "E3_302_001",
                            "E3_302_002",
                            "E3_302_003",
                            "E3_302_004",
                            "E3_302_005",
                            "E3_304",
                            "E3_307",
                            "E3_309",
                            "E3_312",
                            "E3_313_001",
                            "E3_313_002",
                            "E3_313_003",
                            "E3_313_004",
                            "E3_313_005",
                            "E3_315",
                            "E3_581_001",
                            "E3_581_002",
                            "E3_581_003",
                            "E3_582",
                            "E3_583",
                            "E3_584",
                            "E3_585_001",
                            "E3_585_002",
                            "E3_585_003",
                            "E3_585_004",
                            "E3_585_005",
                            "E3_585_006",
                            "E3_585_007",
                            "E3_585_008",
                            "E3_585_009",
                            "E3_585_010",
                            "E3_585_011",
                            "E3_585_012",
                            "E3_585_013",
                            "E3_585_014",
                            "E3_585_015",
                            "E3_585_016",
                            "E3_586",
                            "E3_587",
                            "E3_588",
                            "E3_589",
                            "E3_881_001",
                            "E3_881_002",
                            "E3_881_003",
                            "E3_881_004",
                            "E3_882_001",
                            "E3_882_002",
                            "E3_882_003",
                            "E3_882_004",
                            "E3_883_001",
                            "E3_883_002",
                            "E3_883_003",
                            "E3_883_004",
                            "VAT_361",
                            "VAT_362",
                            "VAT_363",
                            "VAT_364",
                            "VAT_365",
                            "VAT_366"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
            
            private classificationTypeLocalType() {
            }
        }
    }
    
    public enum ExpensesClassificationValueType {
        
        E3_101,
        
        E3_102_001,
        
        E3_102_002,
        
        E3_102_003,
        
        E3_102_004,
        
        E3_102_005,
        
        E3_102_006,
        
        E3_104,
        
        E3_201,
        
        E3_202_001,
        
        E3_202_002,
        
        E3_202_003,
        
        E3_202_004,
        
        E3_202_005,
        
        E3_204,
        
        E3_207,
        
        E3_209,
        
        E3_301,
        
        E3_302_001,
        
        E3_302_002,
        
        E3_302_003,
        
        E3_302_004,
        
        E3_302_005,
        
        E3_304,
        
        E3_307,
        
        E3_309,
        
        E3_312,
        
        E3_313_001,
        
        E3_313_002,
        
        E3_313_003,
        
        E3_313_004,
        
        E3_313_005,
        
        E3_315,
        
        E3_581_001,
        
        E3_581_002,
        
        E3_581_003,
        
        E3_582,
        
        E3_583,
        
        E3_584,
        
        E3_585_001,
        
        E3_585_002,
        
        E3_585_003,
        
        E3_585_004,
        
        E3_585_005,
        
        E3_585_006,
        
        E3_585_007,
        
        E3_585_008,
        
        E3_585_009,
        
        E3_585_010,
        
        E3_585_011,
        
        E3_585_012,
        
        E3_585_013,
        
        E3_585_014,
        
        E3_585_015,
        
        E3_585_016,
        
        E3_586,
        
        E3_587,
        
        E3_588,
        
        E3_589,
        
        E3_881_001,
        
        E3_881_002,
        
        E3_881_003,
        
        E3_881_004,
        
        E3_882_001,
        
        E3_882_002,
        
        E3_882_003,
        
        E3_882_004,
        
        E3_883_001,
        
        E3_883_002,
        
        E3_883_003,
        
        E3_883_004,
        
        VAT_361,
        
        VAT_362,
        
        VAT_363,
        
        VAT_364,
        
        VAT_365,
        
        VAT_366,
    }
    
    public sealed class ExpensesClassificationValueTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "E3_101",
                        "E3_102_001",
                        "E3_102_002",
                        "E3_102_003",
                        "E3_102_004",
                        "E3_102_005",
                        "E3_102_006",
                        "E3_104",
                        "E3_201",
                        "E3_202_001",
                        "E3_202_002",
                        "E3_202_003",
                        "E3_202_004",
                        "E3_202_005",
                        "E3_204",
                        "E3_207",
                        "E3_209",
                        "E3_301",
                        "E3_302_001",
                        "E3_302_002",
                        "E3_302_003",
                        "E3_302_004",
                        "E3_302_005",
                        "E3_304",
                        "E3_307",
                        "E3_309",
                        "E3_312",
                        "E3_313_001",
                        "E3_313_002",
                        "E3_313_003",
                        "E3_313_004",
                        "E3_313_005",
                        "E3_315",
                        "E3_581_001",
                        "E3_581_002",
                        "E3_581_003",
                        "E3_582",
                        "E3_583",
                        "E3_584",
                        "E3_585_001",
                        "E3_585_002",
                        "E3_585_003",
                        "E3_585_004",
                        "E3_585_005",
                        "E3_585_006",
                        "E3_585_007",
                        "E3_585_008",
                        "E3_585_009",
                        "E3_585_010",
                        "E3_585_011",
                        "E3_585_012",
                        "E3_585_013",
                        "E3_585_014",
                        "E3_585_015",
                        "E3_585_016",
                        "E3_586",
                        "E3_587",
                        "E3_588",
                        "E3_589",
                        "E3_881_001",
                        "E3_881_002",
                        "E3_881_003",
                        "E3_881_004",
                        "E3_882_001",
                        "E3_882_002",
                        "E3_882_003",
                        "E3_882_004",
                        "E3_883_001",
                        "E3_883_002",
                        "E3_883_003",
                        "E3_883_004",
                        "VAT_361",
                        "VAT_362",
                        "VAT_363",
                        "VAT_364",
                        "VAT_365",
                        "VAT_366"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ExpensesClassificationValueTypeValidator() {
        }
    }
    
    public enum ExpensesClassificationCategoryType {
        
        category2_1,
        
        category2_2,
        
        category2_3,
        
        category2_4,
        
        category2_5,
        
        category2_6,
        
        category2_7,
        
        category2_8,
        
        category2_9,
        
        category2_10,
        
        category2_11,
        
        category2_12,
        
        category2_13,
        
        category2_14,
        
        category2_95,
    }
    
    public sealed class ExpensesClassificationCategoryTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "category2_1",
                        "category2_2",
                        "category2_3",
                        "category2_4",
                        "category2_5",
                        "category2_6",
                        "category2_7",
                        "category2_8",
                        "category2_9",
                        "category2_10",
                        "category2_11",
                        "category2_12",
                        "category2_13",
                        "category2_14",
                        "category2_95"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ExpensesClassificationCategoryTypeValidator() {
        }
    }
    
    public sealed class AmountType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(2304)), null, 2, 0, null, null, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AmountType() {
        }
    }
    
    public enum ModeType {
        
        E3,
        
        VAT,
    }
    
    public sealed class ModeTypeValidator {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "E3",
                        "VAT"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ModeTypeValidator() {
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

		public ExpensesClassificationsDoc ExpensesClassificationsDoc {  get {return rootObject as ExpensesClassificationsDoc; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(ExpensesClassificationsDoc root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public virtual XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public virtual XTypedElement Root {
            get {
                return rootObject;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
